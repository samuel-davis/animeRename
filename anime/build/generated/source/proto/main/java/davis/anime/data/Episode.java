// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: davis/anime/data/Anime.proto

package davis.anime.data;

/**
 * Protobuf type {@code Episode}
 */
public  final class Episode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Episode)
    EpisodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Episode.newBuilder() to construct.
  private Episode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Episode() {
    episodeNumber_ = false;
    currentPath_ = "";
    targetPath_ = "";
    currentName_ = "";
    targetName_ = "";
    tvdbRef_ = "";
    subtitleRef_ = "";
    hasSubtitles_ = false;
    fileSize_ = 0F;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Episode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            episodeNumber_ = input.readBool();
            break;
          }
          case 18: {
            davis.anime.data.Season.Builder subBuilder = null;
            if (refSeason_ != null) {
              subBuilder = refSeason_.toBuilder();
            }
            refSeason_ = input.readMessage(davis.anime.data.Season.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(refSeason_);
              refSeason_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            currentPath_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            targetPath_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            currentName_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            targetName_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            tvdbRef_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            subtitleRef_ = s;
            break;
          }
          case 72: {

            hasSubtitles_ = input.readBool();
            break;
          }
          case 85: {

            fileSize_ = input.readFloat();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return davis.anime.data.AnimeProto.internal_static_Episode_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return davis.anime.data.AnimeProto.internal_static_Episode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            davis.anime.data.Episode.class, davis.anime.data.Episode.Builder.class);
  }

  public static final int EPISODE_NUMBER_FIELD_NUMBER = 1;
  private boolean episodeNumber_;
  /**
   * <code>bool episode_number = 1;</code>
   */
  public boolean getEpisodeNumber() {
    return episodeNumber_;
  }

  public static final int REF_SEASON_FIELD_NUMBER = 2;
  private davis.anime.data.Season refSeason_;
  /**
   * <code>.Season ref_season = 2;</code>
   */
  public boolean hasRefSeason() {
    return refSeason_ != null;
  }
  /**
   * <code>.Season ref_season = 2;</code>
   */
  public davis.anime.data.Season getRefSeason() {
    return refSeason_ == null ? davis.anime.data.Season.getDefaultInstance() : refSeason_;
  }
  /**
   * <code>.Season ref_season = 2;</code>
   */
  public davis.anime.data.SeasonOrBuilder getRefSeasonOrBuilder() {
    return getRefSeason();
  }

  public static final int CURRENT_PATH_FIELD_NUMBER = 3;
  private volatile java.lang.Object currentPath_;
  /**
   * <code>string current_path = 3;</code>
   */
  public java.lang.String getCurrentPath() {
    java.lang.Object ref = currentPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      currentPath_ = s;
      return s;
    }
  }
  /**
   * <code>string current_path = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCurrentPathBytes() {
    java.lang.Object ref = currentPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currentPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TARGET_PATH_FIELD_NUMBER = 4;
  private volatile java.lang.Object targetPath_;
  /**
   * <code>string target_path = 4;</code>
   */
  public java.lang.String getTargetPath() {
    java.lang.Object ref = targetPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetPath_ = s;
      return s;
    }
  }
  /**
   * <code>string target_path = 4;</code>
   */
  public com.google.protobuf.ByteString
      getTargetPathBytes() {
    java.lang.Object ref = targetPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      targetPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CURRENT_NAME_FIELD_NUMBER = 5;
  private volatile java.lang.Object currentName_;
  /**
   * <code>string current_name = 5;</code>
   */
  public java.lang.String getCurrentName() {
    java.lang.Object ref = currentName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      currentName_ = s;
      return s;
    }
  }
  /**
   * <code>string current_name = 5;</code>
   */
  public com.google.protobuf.ByteString
      getCurrentNameBytes() {
    java.lang.Object ref = currentName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currentName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TARGET_NAME_FIELD_NUMBER = 6;
  private volatile java.lang.Object targetName_;
  /**
   * <code>string target_name = 6;</code>
   */
  public java.lang.String getTargetName() {
    java.lang.Object ref = targetName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetName_ = s;
      return s;
    }
  }
  /**
   * <code>string target_name = 6;</code>
   */
  public com.google.protobuf.ByteString
      getTargetNameBytes() {
    java.lang.Object ref = targetName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      targetName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TVDB_REF_FIELD_NUMBER = 7;
  private volatile java.lang.Object tvdbRef_;
  /**
   * <code>string tvdb_ref = 7;</code>
   */
  public java.lang.String getTvdbRef() {
    java.lang.Object ref = tvdbRef_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tvdbRef_ = s;
      return s;
    }
  }
  /**
   * <code>string tvdb_ref = 7;</code>
   */
  public com.google.protobuf.ByteString
      getTvdbRefBytes() {
    java.lang.Object ref = tvdbRef_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tvdbRef_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUBTITLE_REF_FIELD_NUMBER = 8;
  private volatile java.lang.Object subtitleRef_;
  /**
   * <code>string subtitle_ref = 8;</code>
   */
  public java.lang.String getSubtitleRef() {
    java.lang.Object ref = subtitleRef_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subtitleRef_ = s;
      return s;
    }
  }
  /**
   * <code>string subtitle_ref = 8;</code>
   */
  public com.google.protobuf.ByteString
      getSubtitleRefBytes() {
    java.lang.Object ref = subtitleRef_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subtitleRef_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HAS_SUBTITLES_FIELD_NUMBER = 9;
  private boolean hasSubtitles_;
  /**
   * <code>bool has_subtitles = 9;</code>
   */
  public boolean getHasSubtitles() {
    return hasSubtitles_;
  }

  public static final int FILE_SIZE_FIELD_NUMBER = 10;
  private float fileSize_;
  /**
   * <code>float file_size = 10;</code>
   */
  public float getFileSize() {
    return fileSize_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (episodeNumber_ != false) {
      output.writeBool(1, episodeNumber_);
    }
    if (refSeason_ != null) {
      output.writeMessage(2, getRefSeason());
    }
    if (!getCurrentPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, currentPath_);
    }
    if (!getTargetPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, targetPath_);
    }
    if (!getCurrentNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, currentName_);
    }
    if (!getTargetNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, targetName_);
    }
    if (!getTvdbRefBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, tvdbRef_);
    }
    if (!getSubtitleRefBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, subtitleRef_);
    }
    if (hasSubtitles_ != false) {
      output.writeBool(9, hasSubtitles_);
    }
    if (fileSize_ != 0F) {
      output.writeFloat(10, fileSize_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (episodeNumber_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, episodeNumber_);
    }
    if (refSeason_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getRefSeason());
    }
    if (!getCurrentPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, currentPath_);
    }
    if (!getTargetPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, targetPath_);
    }
    if (!getCurrentNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, currentName_);
    }
    if (!getTargetNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, targetName_);
    }
    if (!getTvdbRefBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, tvdbRef_);
    }
    if (!getSubtitleRefBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, subtitleRef_);
    }
    if (hasSubtitles_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, hasSubtitles_);
    }
    if (fileSize_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(10, fileSize_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof davis.anime.data.Episode)) {
      return super.equals(obj);
    }
    davis.anime.data.Episode other = (davis.anime.data.Episode) obj;

    boolean result = true;
    result = result && (getEpisodeNumber()
        == other.getEpisodeNumber());
    result = result && (hasRefSeason() == other.hasRefSeason());
    if (hasRefSeason()) {
      result = result && getRefSeason()
          .equals(other.getRefSeason());
    }
    result = result && getCurrentPath()
        .equals(other.getCurrentPath());
    result = result && getTargetPath()
        .equals(other.getTargetPath());
    result = result && getCurrentName()
        .equals(other.getCurrentName());
    result = result && getTargetName()
        .equals(other.getTargetName());
    result = result && getTvdbRef()
        .equals(other.getTvdbRef());
    result = result && getSubtitleRef()
        .equals(other.getSubtitleRef());
    result = result && (getHasSubtitles()
        == other.getHasSubtitles());
    result = result && (
        java.lang.Float.floatToIntBits(getFileSize())
        == java.lang.Float.floatToIntBits(
            other.getFileSize()));
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + EPISODE_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEpisodeNumber());
    if (hasRefSeason()) {
      hash = (37 * hash) + REF_SEASON_FIELD_NUMBER;
      hash = (53 * hash) + getRefSeason().hashCode();
    }
    hash = (37 * hash) + CURRENT_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getCurrentPath().hashCode();
    hash = (37 * hash) + TARGET_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getTargetPath().hashCode();
    hash = (37 * hash) + CURRENT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getCurrentName().hashCode();
    hash = (37 * hash) + TARGET_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTargetName().hashCode();
    hash = (37 * hash) + TVDB_REF_FIELD_NUMBER;
    hash = (53 * hash) + getTvdbRef().hashCode();
    hash = (37 * hash) + SUBTITLE_REF_FIELD_NUMBER;
    hash = (53 * hash) + getSubtitleRef().hashCode();
    hash = (37 * hash) + HAS_SUBTITLES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHasSubtitles());
    hash = (37 * hash) + FILE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getFileSize());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static davis.anime.data.Episode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static davis.anime.data.Episode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static davis.anime.data.Episode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static davis.anime.data.Episode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static davis.anime.data.Episode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static davis.anime.data.Episode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static davis.anime.data.Episode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static davis.anime.data.Episode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static davis.anime.data.Episode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static davis.anime.data.Episode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static davis.anime.data.Episode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static davis.anime.data.Episode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(davis.anime.data.Episode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Episode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Episode)
      davis.anime.data.EpisodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return davis.anime.data.AnimeProto.internal_static_Episode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return davis.anime.data.AnimeProto.internal_static_Episode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              davis.anime.data.Episode.class, davis.anime.data.Episode.Builder.class);
    }

    // Construct using davis.anime.data.Episode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      episodeNumber_ = false;

      if (refSeasonBuilder_ == null) {
        refSeason_ = null;
      } else {
        refSeason_ = null;
        refSeasonBuilder_ = null;
      }
      currentPath_ = "";

      targetPath_ = "";

      currentName_ = "";

      targetName_ = "";

      tvdbRef_ = "";

      subtitleRef_ = "";

      hasSubtitles_ = false;

      fileSize_ = 0F;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return davis.anime.data.AnimeProto.internal_static_Episode_descriptor;
    }

    public davis.anime.data.Episode getDefaultInstanceForType() {
      return davis.anime.data.Episode.getDefaultInstance();
    }

    public davis.anime.data.Episode build() {
      davis.anime.data.Episode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public davis.anime.data.Episode buildPartial() {
      davis.anime.data.Episode result = new davis.anime.data.Episode(this);
      result.episodeNumber_ = episodeNumber_;
      if (refSeasonBuilder_ == null) {
        result.refSeason_ = refSeason_;
      } else {
        result.refSeason_ = refSeasonBuilder_.build();
      }
      result.currentPath_ = currentPath_;
      result.targetPath_ = targetPath_;
      result.currentName_ = currentName_;
      result.targetName_ = targetName_;
      result.tvdbRef_ = tvdbRef_;
      result.subtitleRef_ = subtitleRef_;
      result.hasSubtitles_ = hasSubtitles_;
      result.fileSize_ = fileSize_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof davis.anime.data.Episode) {
        return mergeFrom((davis.anime.data.Episode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(davis.anime.data.Episode other) {
      if (other == davis.anime.data.Episode.getDefaultInstance()) return this;
      if (other.getEpisodeNumber() != false) {
        setEpisodeNumber(other.getEpisodeNumber());
      }
      if (other.hasRefSeason()) {
        mergeRefSeason(other.getRefSeason());
      }
      if (!other.getCurrentPath().isEmpty()) {
        currentPath_ = other.currentPath_;
        onChanged();
      }
      if (!other.getTargetPath().isEmpty()) {
        targetPath_ = other.targetPath_;
        onChanged();
      }
      if (!other.getCurrentName().isEmpty()) {
        currentName_ = other.currentName_;
        onChanged();
      }
      if (!other.getTargetName().isEmpty()) {
        targetName_ = other.targetName_;
        onChanged();
      }
      if (!other.getTvdbRef().isEmpty()) {
        tvdbRef_ = other.tvdbRef_;
        onChanged();
      }
      if (!other.getSubtitleRef().isEmpty()) {
        subtitleRef_ = other.subtitleRef_;
        onChanged();
      }
      if (other.getHasSubtitles() != false) {
        setHasSubtitles(other.getHasSubtitles());
      }
      if (other.getFileSize() != 0F) {
        setFileSize(other.getFileSize());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      davis.anime.data.Episode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (davis.anime.data.Episode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean episodeNumber_ ;
    /**
     * <code>bool episode_number = 1;</code>
     */
    public boolean getEpisodeNumber() {
      return episodeNumber_;
    }
    /**
     * <code>bool episode_number = 1;</code>
     */
    public Builder setEpisodeNumber(boolean value) {
      
      episodeNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool episode_number = 1;</code>
     */
    public Builder clearEpisodeNumber() {
      
      episodeNumber_ = false;
      onChanged();
      return this;
    }

    private davis.anime.data.Season refSeason_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        davis.anime.data.Season, davis.anime.data.Season.Builder, davis.anime.data.SeasonOrBuilder> refSeasonBuilder_;
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public boolean hasRefSeason() {
      return refSeasonBuilder_ != null || refSeason_ != null;
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public davis.anime.data.Season getRefSeason() {
      if (refSeasonBuilder_ == null) {
        return refSeason_ == null ? davis.anime.data.Season.getDefaultInstance() : refSeason_;
      } else {
        return refSeasonBuilder_.getMessage();
      }
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public Builder setRefSeason(davis.anime.data.Season value) {
      if (refSeasonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        refSeason_ = value;
        onChanged();
      } else {
        refSeasonBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public Builder setRefSeason(
        davis.anime.data.Season.Builder builderForValue) {
      if (refSeasonBuilder_ == null) {
        refSeason_ = builderForValue.build();
        onChanged();
      } else {
        refSeasonBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public Builder mergeRefSeason(davis.anime.data.Season value) {
      if (refSeasonBuilder_ == null) {
        if (refSeason_ != null) {
          refSeason_ =
            davis.anime.data.Season.newBuilder(refSeason_).mergeFrom(value).buildPartial();
        } else {
          refSeason_ = value;
        }
        onChanged();
      } else {
        refSeasonBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public Builder clearRefSeason() {
      if (refSeasonBuilder_ == null) {
        refSeason_ = null;
        onChanged();
      } else {
        refSeason_ = null;
        refSeasonBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public davis.anime.data.Season.Builder getRefSeasonBuilder() {
      
      onChanged();
      return getRefSeasonFieldBuilder().getBuilder();
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    public davis.anime.data.SeasonOrBuilder getRefSeasonOrBuilder() {
      if (refSeasonBuilder_ != null) {
        return refSeasonBuilder_.getMessageOrBuilder();
      } else {
        return refSeason_ == null ?
            davis.anime.data.Season.getDefaultInstance() : refSeason_;
      }
    }
    /**
     * <code>.Season ref_season = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        davis.anime.data.Season, davis.anime.data.Season.Builder, davis.anime.data.SeasonOrBuilder> 
        getRefSeasonFieldBuilder() {
      if (refSeasonBuilder_ == null) {
        refSeasonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            davis.anime.data.Season, davis.anime.data.Season.Builder, davis.anime.data.SeasonOrBuilder>(
                getRefSeason(),
                getParentForChildren(),
                isClean());
        refSeason_ = null;
      }
      return refSeasonBuilder_;
    }

    private java.lang.Object currentPath_ = "";
    /**
     * <code>string current_path = 3;</code>
     */
    public java.lang.String getCurrentPath() {
      java.lang.Object ref = currentPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currentPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string current_path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCurrentPathBytes() {
      java.lang.Object ref = currentPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string current_path = 3;</code>
     */
    public Builder setCurrentPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      currentPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string current_path = 3;</code>
     */
    public Builder clearCurrentPath() {
      
      currentPath_ = getDefaultInstance().getCurrentPath();
      onChanged();
      return this;
    }
    /**
     * <code>string current_path = 3;</code>
     */
    public Builder setCurrentPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      currentPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object targetPath_ = "";
    /**
     * <code>string target_path = 4;</code>
     */
    public java.lang.String getTargetPath() {
      java.lang.Object ref = targetPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string target_path = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTargetPathBytes() {
      java.lang.Object ref = targetPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string target_path = 4;</code>
     */
    public Builder setTargetPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      targetPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string target_path = 4;</code>
     */
    public Builder clearTargetPath() {
      
      targetPath_ = getDefaultInstance().getTargetPath();
      onChanged();
      return this;
    }
    /**
     * <code>string target_path = 4;</code>
     */
    public Builder setTargetPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      targetPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object currentName_ = "";
    /**
     * <code>string current_name = 5;</code>
     */
    public java.lang.String getCurrentName() {
      java.lang.Object ref = currentName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currentName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string current_name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCurrentNameBytes() {
      java.lang.Object ref = currentName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string current_name = 5;</code>
     */
    public Builder setCurrentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      currentName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string current_name = 5;</code>
     */
    public Builder clearCurrentName() {
      
      currentName_ = getDefaultInstance().getCurrentName();
      onChanged();
      return this;
    }
    /**
     * <code>string current_name = 5;</code>
     */
    public Builder setCurrentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      currentName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object targetName_ = "";
    /**
     * <code>string target_name = 6;</code>
     */
    public java.lang.String getTargetName() {
      java.lang.Object ref = targetName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string target_name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTargetNameBytes() {
      java.lang.Object ref = targetName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string target_name = 6;</code>
     */
    public Builder setTargetName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      targetName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string target_name = 6;</code>
     */
    public Builder clearTargetName() {
      
      targetName_ = getDefaultInstance().getTargetName();
      onChanged();
      return this;
    }
    /**
     * <code>string target_name = 6;</code>
     */
    public Builder setTargetNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      targetName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object tvdbRef_ = "";
    /**
     * <code>string tvdb_ref = 7;</code>
     */
    public java.lang.String getTvdbRef() {
      java.lang.Object ref = tvdbRef_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tvdbRef_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string tvdb_ref = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTvdbRefBytes() {
      java.lang.Object ref = tvdbRef_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tvdbRef_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string tvdb_ref = 7;</code>
     */
    public Builder setTvdbRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tvdbRef_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string tvdb_ref = 7;</code>
     */
    public Builder clearTvdbRef() {
      
      tvdbRef_ = getDefaultInstance().getTvdbRef();
      onChanged();
      return this;
    }
    /**
     * <code>string tvdb_ref = 7;</code>
     */
    public Builder setTvdbRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tvdbRef_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object subtitleRef_ = "";
    /**
     * <code>string subtitle_ref = 8;</code>
     */
    public java.lang.String getSubtitleRef() {
      java.lang.Object ref = subtitleRef_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subtitleRef_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string subtitle_ref = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSubtitleRefBytes() {
      java.lang.Object ref = subtitleRef_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subtitleRef_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string subtitle_ref = 8;</code>
     */
    public Builder setSubtitleRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subtitleRef_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string subtitle_ref = 8;</code>
     */
    public Builder clearSubtitleRef() {
      
      subtitleRef_ = getDefaultInstance().getSubtitleRef();
      onChanged();
      return this;
    }
    /**
     * <code>string subtitle_ref = 8;</code>
     */
    public Builder setSubtitleRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subtitleRef_ = value;
      onChanged();
      return this;
    }

    private boolean hasSubtitles_ ;
    /**
     * <code>bool has_subtitles = 9;</code>
     */
    public boolean getHasSubtitles() {
      return hasSubtitles_;
    }
    /**
     * <code>bool has_subtitles = 9;</code>
     */
    public Builder setHasSubtitles(boolean value) {
      
      hasSubtitles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool has_subtitles = 9;</code>
     */
    public Builder clearHasSubtitles() {
      
      hasSubtitles_ = false;
      onChanged();
      return this;
    }

    private float fileSize_ ;
    /**
     * <code>float file_size = 10;</code>
     */
    public float getFileSize() {
      return fileSize_;
    }
    /**
     * <code>float file_size = 10;</code>
     */
    public Builder setFileSize(float value) {
      
      fileSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float file_size = 10;</code>
     */
    public Builder clearFileSize() {
      
      fileSize_ = 0F;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Episode)
  }

  // @@protoc_insertion_point(class_scope:Episode)
  private static final davis.anime.data.Episode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new davis.anime.data.Episode();
  }

  public static davis.anime.data.Episode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Episode>
      PARSER = new com.google.protobuf.AbstractParser<Episode>() {
    public Episode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Episode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Episode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Episode> getParserForType() {
    return PARSER;
  }

  public davis.anime.data.Episode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

