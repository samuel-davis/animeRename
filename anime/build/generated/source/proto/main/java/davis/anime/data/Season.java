// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: davis/anime/data/Anime.proto

package davis.anime.data;

/**
 * Protobuf type {@code Season}
 */
public  final class Season extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Season)
    SeasonOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Season.newBuilder() to construct.
  private Season(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Season() {
    seasonNumber_ = 0;
    numberEpisodes_ = 0;
    episodes_ = java.util.Collections.emptyList();
    totalSize_ = 0F;
    currentPath_ = "";
    targetPath_ = "";
    currentName_ = "";
    targetName_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Season(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            seasonNumber_ = input.readUInt32();
            break;
          }
          case 16: {

            numberEpisodes_ = input.readUInt32();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              episodes_ = new java.util.ArrayList<davis.anime.data.Episode>();
              mutable_bitField0_ |= 0x00000004;
            }
            episodes_.add(
                input.readMessage(davis.anime.data.Episode.parser(), extensionRegistry));
            break;
          }
          case 37: {

            totalSize_ = input.readFloat();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            currentPath_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            targetPath_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            currentName_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            targetName_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        episodes_ = java.util.Collections.unmodifiableList(episodes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return davis.anime.data.AnimeProto.internal_static_Season_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return davis.anime.data.AnimeProto.internal_static_Season_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            davis.anime.data.Season.class, davis.anime.data.Season.Builder.class);
  }

  private int bitField0_;
  public static final int SEASON_NUMBER_FIELD_NUMBER = 1;
  private int seasonNumber_;
  /**
   * <code>uint32 season_number = 1;</code>
   */
  public int getSeasonNumber() {
    return seasonNumber_;
  }

  public static final int NUMBER_EPISODES_FIELD_NUMBER = 2;
  private int numberEpisodes_;
  /**
   * <code>uint32 number_episodes = 2;</code>
   */
  public int getNumberEpisodes() {
    return numberEpisodes_;
  }

  public static final int EPISODES_FIELD_NUMBER = 3;
  private java.util.List<davis.anime.data.Episode> episodes_;
  /**
   * <code>repeated .Episode episodes = 3;</code>
   */
  public java.util.List<davis.anime.data.Episode> getEpisodesList() {
    return episodes_;
  }
  /**
   * <code>repeated .Episode episodes = 3;</code>
   */
  public java.util.List<? extends davis.anime.data.EpisodeOrBuilder> 
      getEpisodesOrBuilderList() {
    return episodes_;
  }
  /**
   * <code>repeated .Episode episodes = 3;</code>
   */
  public int getEpisodesCount() {
    return episodes_.size();
  }
  /**
   * <code>repeated .Episode episodes = 3;</code>
   */
  public davis.anime.data.Episode getEpisodes(int index) {
    return episodes_.get(index);
  }
  /**
   * <code>repeated .Episode episodes = 3;</code>
   */
  public davis.anime.data.EpisodeOrBuilder getEpisodesOrBuilder(
      int index) {
    return episodes_.get(index);
  }

  public static final int TOTAL_SIZE_FIELD_NUMBER = 4;
  private float totalSize_;
  /**
   * <code>float total_size = 4;</code>
   */
  public float getTotalSize() {
    return totalSize_;
  }

  public static final int CURRENT_PATH_FIELD_NUMBER = 5;
  private volatile java.lang.Object currentPath_;
  /**
   * <code>string current_path = 5;</code>
   */
  public java.lang.String getCurrentPath() {
    java.lang.Object ref = currentPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      currentPath_ = s;
      return s;
    }
  }
  /**
   * <code>string current_path = 5;</code>
   */
  public com.google.protobuf.ByteString
      getCurrentPathBytes() {
    java.lang.Object ref = currentPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currentPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TARGET_PATH_FIELD_NUMBER = 6;
  private volatile java.lang.Object targetPath_;
  /**
   * <code>string target_path = 6;</code>
   */
  public java.lang.String getTargetPath() {
    java.lang.Object ref = targetPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetPath_ = s;
      return s;
    }
  }
  /**
   * <code>string target_path = 6;</code>
   */
  public com.google.protobuf.ByteString
      getTargetPathBytes() {
    java.lang.Object ref = targetPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      targetPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CURRENT_NAME_FIELD_NUMBER = 7;
  private volatile java.lang.Object currentName_;
  /**
   * <code>string current_name = 7;</code>
   */
  public java.lang.String getCurrentName() {
    java.lang.Object ref = currentName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      currentName_ = s;
      return s;
    }
  }
  /**
   * <code>string current_name = 7;</code>
   */
  public com.google.protobuf.ByteString
      getCurrentNameBytes() {
    java.lang.Object ref = currentName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currentName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TARGET_NAME_FIELD_NUMBER = 8;
  private volatile java.lang.Object targetName_;
  /**
   * <code>string target_name = 8;</code>
   */
  public java.lang.String getTargetName() {
    java.lang.Object ref = targetName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetName_ = s;
      return s;
    }
  }
  /**
   * <code>string target_name = 8;</code>
   */
  public com.google.protobuf.ByteString
      getTargetNameBytes() {
    java.lang.Object ref = targetName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      targetName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (seasonNumber_ != 0) {
      output.writeUInt32(1, seasonNumber_);
    }
    if (numberEpisodes_ != 0) {
      output.writeUInt32(2, numberEpisodes_);
    }
    for (int i = 0; i < episodes_.size(); i++) {
      output.writeMessage(3, episodes_.get(i));
    }
    if (totalSize_ != 0F) {
      output.writeFloat(4, totalSize_);
    }
    if (!getCurrentPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, currentPath_);
    }
    if (!getTargetPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, targetPath_);
    }
    if (!getCurrentNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, currentName_);
    }
    if (!getTargetNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, targetName_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (seasonNumber_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, seasonNumber_);
    }
    if (numberEpisodes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, numberEpisodes_);
    }
    for (int i = 0; i < episodes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, episodes_.get(i));
    }
    if (totalSize_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, totalSize_);
    }
    if (!getCurrentPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, currentPath_);
    }
    if (!getTargetPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, targetPath_);
    }
    if (!getCurrentNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, currentName_);
    }
    if (!getTargetNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, targetName_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof davis.anime.data.Season)) {
      return super.equals(obj);
    }
    davis.anime.data.Season other = (davis.anime.data.Season) obj;

    boolean result = true;
    result = result && (getSeasonNumber()
        == other.getSeasonNumber());
    result = result && (getNumberEpisodes()
        == other.getNumberEpisodes());
    result = result && getEpisodesList()
        .equals(other.getEpisodesList());
    result = result && (
        java.lang.Float.floatToIntBits(getTotalSize())
        == java.lang.Float.floatToIntBits(
            other.getTotalSize()));
    result = result && getCurrentPath()
        .equals(other.getCurrentPath());
    result = result && getTargetPath()
        .equals(other.getTargetPath());
    result = result && getCurrentName()
        .equals(other.getCurrentName());
    result = result && getTargetName()
        .equals(other.getTargetName());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SEASON_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + getSeasonNumber();
    hash = (37 * hash) + NUMBER_EPISODES_FIELD_NUMBER;
    hash = (53 * hash) + getNumberEpisodes();
    if (getEpisodesCount() > 0) {
      hash = (37 * hash) + EPISODES_FIELD_NUMBER;
      hash = (53 * hash) + getEpisodesList().hashCode();
    }
    hash = (37 * hash) + TOTAL_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalSize());
    hash = (37 * hash) + CURRENT_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getCurrentPath().hashCode();
    hash = (37 * hash) + TARGET_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getTargetPath().hashCode();
    hash = (37 * hash) + CURRENT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getCurrentName().hashCode();
    hash = (37 * hash) + TARGET_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTargetName().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static davis.anime.data.Season parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static davis.anime.data.Season parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static davis.anime.data.Season parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static davis.anime.data.Season parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static davis.anime.data.Season parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static davis.anime.data.Season parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static davis.anime.data.Season parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static davis.anime.data.Season parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static davis.anime.data.Season parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static davis.anime.data.Season parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static davis.anime.data.Season parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static davis.anime.data.Season parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(davis.anime.data.Season prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Season}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Season)
      davis.anime.data.SeasonOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return davis.anime.data.AnimeProto.internal_static_Season_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return davis.anime.data.AnimeProto.internal_static_Season_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              davis.anime.data.Season.class, davis.anime.data.Season.Builder.class);
    }

    // Construct using davis.anime.data.Season.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEpisodesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      seasonNumber_ = 0;

      numberEpisodes_ = 0;

      if (episodesBuilder_ == null) {
        episodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        episodesBuilder_.clear();
      }
      totalSize_ = 0F;

      currentPath_ = "";

      targetPath_ = "";

      currentName_ = "";

      targetName_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return davis.anime.data.AnimeProto.internal_static_Season_descriptor;
    }

    public davis.anime.data.Season getDefaultInstanceForType() {
      return davis.anime.data.Season.getDefaultInstance();
    }

    public davis.anime.data.Season build() {
      davis.anime.data.Season result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public davis.anime.data.Season buildPartial() {
      davis.anime.data.Season result = new davis.anime.data.Season(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.seasonNumber_ = seasonNumber_;
      result.numberEpisodes_ = numberEpisodes_;
      if (episodesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          episodes_ = java.util.Collections.unmodifiableList(episodes_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.episodes_ = episodes_;
      } else {
        result.episodes_ = episodesBuilder_.build();
      }
      result.totalSize_ = totalSize_;
      result.currentPath_ = currentPath_;
      result.targetPath_ = targetPath_;
      result.currentName_ = currentName_;
      result.targetName_ = targetName_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof davis.anime.data.Season) {
        return mergeFrom((davis.anime.data.Season)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(davis.anime.data.Season other) {
      if (other == davis.anime.data.Season.getDefaultInstance()) return this;
      if (other.getSeasonNumber() != 0) {
        setSeasonNumber(other.getSeasonNumber());
      }
      if (other.getNumberEpisodes() != 0) {
        setNumberEpisodes(other.getNumberEpisodes());
      }
      if (episodesBuilder_ == null) {
        if (!other.episodes_.isEmpty()) {
          if (episodes_.isEmpty()) {
            episodes_ = other.episodes_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEpisodesIsMutable();
            episodes_.addAll(other.episodes_);
          }
          onChanged();
        }
      } else {
        if (!other.episodes_.isEmpty()) {
          if (episodesBuilder_.isEmpty()) {
            episodesBuilder_.dispose();
            episodesBuilder_ = null;
            episodes_ = other.episodes_;
            bitField0_ = (bitField0_ & ~0x00000004);
            episodesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEpisodesFieldBuilder() : null;
          } else {
            episodesBuilder_.addAllMessages(other.episodes_);
          }
        }
      }
      if (other.getTotalSize() != 0F) {
        setTotalSize(other.getTotalSize());
      }
      if (!other.getCurrentPath().isEmpty()) {
        currentPath_ = other.currentPath_;
        onChanged();
      }
      if (!other.getTargetPath().isEmpty()) {
        targetPath_ = other.targetPath_;
        onChanged();
      }
      if (!other.getCurrentName().isEmpty()) {
        currentName_ = other.currentName_;
        onChanged();
      }
      if (!other.getTargetName().isEmpty()) {
        targetName_ = other.targetName_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      davis.anime.data.Season parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (davis.anime.data.Season) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int seasonNumber_ ;
    /**
     * <code>uint32 season_number = 1;</code>
     */
    public int getSeasonNumber() {
      return seasonNumber_;
    }
    /**
     * <code>uint32 season_number = 1;</code>
     */
    public Builder setSeasonNumber(int value) {
      
      seasonNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 season_number = 1;</code>
     */
    public Builder clearSeasonNumber() {
      
      seasonNumber_ = 0;
      onChanged();
      return this;
    }

    private int numberEpisodes_ ;
    /**
     * <code>uint32 number_episodes = 2;</code>
     */
    public int getNumberEpisodes() {
      return numberEpisodes_;
    }
    /**
     * <code>uint32 number_episodes = 2;</code>
     */
    public Builder setNumberEpisodes(int value) {
      
      numberEpisodes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 number_episodes = 2;</code>
     */
    public Builder clearNumberEpisodes() {
      
      numberEpisodes_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<davis.anime.data.Episode> episodes_ =
      java.util.Collections.emptyList();
    private void ensureEpisodesIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        episodes_ = new java.util.ArrayList<davis.anime.data.Episode>(episodes_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        davis.anime.data.Episode, davis.anime.data.Episode.Builder, davis.anime.data.EpisodeOrBuilder> episodesBuilder_;

    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public java.util.List<davis.anime.data.Episode> getEpisodesList() {
      if (episodesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(episodes_);
      } else {
        return episodesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public int getEpisodesCount() {
      if (episodesBuilder_ == null) {
        return episodes_.size();
      } else {
        return episodesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public davis.anime.data.Episode getEpisodes(int index) {
      if (episodesBuilder_ == null) {
        return episodes_.get(index);
      } else {
        return episodesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder setEpisodes(
        int index, davis.anime.data.Episode value) {
      if (episodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEpisodesIsMutable();
        episodes_.set(index, value);
        onChanged();
      } else {
        episodesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder setEpisodes(
        int index, davis.anime.data.Episode.Builder builderForValue) {
      if (episodesBuilder_ == null) {
        ensureEpisodesIsMutable();
        episodes_.set(index, builderForValue.build());
        onChanged();
      } else {
        episodesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder addEpisodes(davis.anime.data.Episode value) {
      if (episodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEpisodesIsMutable();
        episodes_.add(value);
        onChanged();
      } else {
        episodesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder addEpisodes(
        int index, davis.anime.data.Episode value) {
      if (episodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEpisodesIsMutable();
        episodes_.add(index, value);
        onChanged();
      } else {
        episodesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder addEpisodes(
        davis.anime.data.Episode.Builder builderForValue) {
      if (episodesBuilder_ == null) {
        ensureEpisodesIsMutable();
        episodes_.add(builderForValue.build());
        onChanged();
      } else {
        episodesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder addEpisodes(
        int index, davis.anime.data.Episode.Builder builderForValue) {
      if (episodesBuilder_ == null) {
        ensureEpisodesIsMutable();
        episodes_.add(index, builderForValue.build());
        onChanged();
      } else {
        episodesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder addAllEpisodes(
        java.lang.Iterable<? extends davis.anime.data.Episode> values) {
      if (episodesBuilder_ == null) {
        ensureEpisodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, episodes_);
        onChanged();
      } else {
        episodesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder clearEpisodes() {
      if (episodesBuilder_ == null) {
        episodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        episodesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public Builder removeEpisodes(int index) {
      if (episodesBuilder_ == null) {
        ensureEpisodesIsMutable();
        episodes_.remove(index);
        onChanged();
      } else {
        episodesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public davis.anime.data.Episode.Builder getEpisodesBuilder(
        int index) {
      return getEpisodesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public davis.anime.data.EpisodeOrBuilder getEpisodesOrBuilder(
        int index) {
      if (episodesBuilder_ == null) {
        return episodes_.get(index);  } else {
        return episodesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public java.util.List<? extends davis.anime.data.EpisodeOrBuilder> 
         getEpisodesOrBuilderList() {
      if (episodesBuilder_ != null) {
        return episodesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(episodes_);
      }
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public davis.anime.data.Episode.Builder addEpisodesBuilder() {
      return getEpisodesFieldBuilder().addBuilder(
          davis.anime.data.Episode.getDefaultInstance());
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public davis.anime.data.Episode.Builder addEpisodesBuilder(
        int index) {
      return getEpisodesFieldBuilder().addBuilder(
          index, davis.anime.data.Episode.getDefaultInstance());
    }
    /**
     * <code>repeated .Episode episodes = 3;</code>
     */
    public java.util.List<davis.anime.data.Episode.Builder> 
         getEpisodesBuilderList() {
      return getEpisodesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        davis.anime.data.Episode, davis.anime.data.Episode.Builder, davis.anime.data.EpisodeOrBuilder> 
        getEpisodesFieldBuilder() {
      if (episodesBuilder_ == null) {
        episodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            davis.anime.data.Episode, davis.anime.data.Episode.Builder, davis.anime.data.EpisodeOrBuilder>(
                episodes_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        episodes_ = null;
      }
      return episodesBuilder_;
    }

    private float totalSize_ ;
    /**
     * <code>float total_size = 4;</code>
     */
    public float getTotalSize() {
      return totalSize_;
    }
    /**
     * <code>float total_size = 4;</code>
     */
    public Builder setTotalSize(float value) {
      
      totalSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float total_size = 4;</code>
     */
    public Builder clearTotalSize() {
      
      totalSize_ = 0F;
      onChanged();
      return this;
    }

    private java.lang.Object currentPath_ = "";
    /**
     * <code>string current_path = 5;</code>
     */
    public java.lang.String getCurrentPath() {
      java.lang.Object ref = currentPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currentPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string current_path = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCurrentPathBytes() {
      java.lang.Object ref = currentPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string current_path = 5;</code>
     */
    public Builder setCurrentPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      currentPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string current_path = 5;</code>
     */
    public Builder clearCurrentPath() {
      
      currentPath_ = getDefaultInstance().getCurrentPath();
      onChanged();
      return this;
    }
    /**
     * <code>string current_path = 5;</code>
     */
    public Builder setCurrentPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      currentPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object targetPath_ = "";
    /**
     * <code>string target_path = 6;</code>
     */
    public java.lang.String getTargetPath() {
      java.lang.Object ref = targetPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string target_path = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTargetPathBytes() {
      java.lang.Object ref = targetPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string target_path = 6;</code>
     */
    public Builder setTargetPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      targetPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string target_path = 6;</code>
     */
    public Builder clearTargetPath() {
      
      targetPath_ = getDefaultInstance().getTargetPath();
      onChanged();
      return this;
    }
    /**
     * <code>string target_path = 6;</code>
     */
    public Builder setTargetPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      targetPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object currentName_ = "";
    /**
     * <code>string current_name = 7;</code>
     */
    public java.lang.String getCurrentName() {
      java.lang.Object ref = currentName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currentName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string current_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCurrentNameBytes() {
      java.lang.Object ref = currentName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string current_name = 7;</code>
     */
    public Builder setCurrentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      currentName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string current_name = 7;</code>
     */
    public Builder clearCurrentName() {
      
      currentName_ = getDefaultInstance().getCurrentName();
      onChanged();
      return this;
    }
    /**
     * <code>string current_name = 7;</code>
     */
    public Builder setCurrentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      currentName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object targetName_ = "";
    /**
     * <code>string target_name = 8;</code>
     */
    public java.lang.String getTargetName() {
      java.lang.Object ref = targetName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string target_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getTargetNameBytes() {
      java.lang.Object ref = targetName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string target_name = 8;</code>
     */
    public Builder setTargetName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      targetName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string target_name = 8;</code>
     */
    public Builder clearTargetName() {
      
      targetName_ = getDefaultInstance().getTargetName();
      onChanged();
      return this;
    }
    /**
     * <code>string target_name = 8;</code>
     */
    public Builder setTargetNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      targetName_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Season)
  }

  // @@protoc_insertion_point(class_scope:Season)
  private static final davis.anime.data.Season DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new davis.anime.data.Season();
  }

  public static davis.anime.data.Season getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Season>
      PARSER = new com.google.protobuf.AbstractParser<Season>() {
    public Season parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Season(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Season> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Season> getParserForType() {
    return PARSER;
  }

  public davis.anime.data.Season getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

